#!/bin/bash

#Needed: 
# - crasm. Is in debian repositories.
# - dd. Is everywhere :)
# - objcopy. Prolly comes with your c compiler.

function do_assemble() {
    echo "Assembling  $1 into $2..."
    rm -f tmp.hex
    lst=`echo "$2" | sed 's/\..*/.lst/'`
    crasm -o tmp.hex $1 > $lst
    if [ ! -e tmp.hex ]; then 
	cat $lst | grep -A 1 '>>>' | grep -A 1 'ERROR'
	echo "Error assembling $2. Please check $lst for more info."
	exit 1;
    fi
    objcopy -I ihex -O binary tmp.hex $2
    rm -f tmp.hex
}

if [ $# -eq 0 ]; then
for x in m_*; do
    echo "Assembling $x..."
    cp $x/spec .
    if [ -f $x/hack.asm ] ; then
        hack=$x/hack.asm
    else
        hack=hack.asm
    fi
    do_assemble $hack $x/hack.bin
    tr '\000-\377' '\377-\377' < $x/hack.bin > $x/empty.bin
    do_assemble hack_jmp.asm $x/hack_jmp.bin
    do_assemble lookforme.asm $x/lookforme.bin
    sed 's/^MEMHACK=0$/MEMHACK=1/' $hack > $x/memhack.asm
    do_assemble $x/memhack.asm $x/memhack.bin
    rm $x/memhack.asm
    rm spec
    echo "$x assembled."
done
echo "All done."
elif [ $# -eq 1 -a -e "$1" ]; then
do_assemble "$1" $(basename "$1" .asm).bin
elif [ $# -eq 2 -a -e "$1" ]; then
do_assemble "$1" "$2"
else
echo Usage:
echo     To assemble everything: assembleme
echo     To assemble file.asm into file.bin: assembleme file.asm
echo     To assemble file.asm into file2.bin: assembleme file.asm file2.bin
fi
